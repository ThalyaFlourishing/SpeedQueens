
 . # OF POSSIBLE ARRANGEMENTS OF k ELEMENTS OUT OF n :
   n! / k!(n-k)!
   . For nQueens(8), this means that n = 64 and k = 8

Number of solutions per 'n':

  n  | solutions
-----+----------
  1  |              1
  2  |              0
  3  |              0
  4  |              2
  5  |             10
  6  |              4
  7  |             40
  8  |             92
  9  |            352
 10  |            724
 11  |          2,680
 12  |         14,200
 13  |         73,712
 14  |        365,596
 15  |      2,279,184
 16  |     14,772,512
 17  |     95,815,104
 18  |    666,090,624
 19  |  4,968,057,848
 20  | 39,029,188,884

=======================================================================

  Heap's flow:
  
 Lay out recursive line from n to 1:
 
 recurse(8), recurse(7), recurse(6), recurse(5), recurse(4), recurse(3), recurse(2), recurse(1) 

 Starting with recurse(1), test first array (always fails), then return to next in line to left (recurse(2))
 
 This returns flow to just under the recursive call, leading then to the swapper
 
 If n is currently odd, set j to i and swap the first element with the second element
 
 Increment i, which has the effect of moving one step to the right and then laying out recursive line from n-1 to 1

 For each new permutation, one must count back down to n = 1, leaving a trail of recursive units of progressively smaller size, each of which is then evaluated



=======================================================================

FUNDAMENTAL SOLUTIONS FOR n = 8:

[4,7,3,8,2,5,1,6],
[5,2,4,7,3,8,6,1],
[4,2,7,3,6,8,5,1],
[4,6,8,3,1,7,5,2],
[3,6,8,1,4,7,5,2],
[5,3,8,4,7,1,6,2],
[5,7,4,1,3,8,6,2],
[4,1,5,8,6,3,7,2],
[3,6,4,1,8,5,7,2],
[6,2,7,1,4,8,5,3],
[4,7,1,8,5,2,6,3],
[6,4,7,1,8,2,5,3]